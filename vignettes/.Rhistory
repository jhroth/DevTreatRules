setwd("~/Dropbox/UW/Research/Dissertation/DevTreatRules/vignettes")
load("/home/jeremy/Dropbox/UW/Research/Dissertation/DevTreatRules/data/one.dataset.rda")
setwd("~/Dropbox/UW/Research/Dissertation/DevTreatRules/vignettes")
set.seed(123)
model.selection <- CompareRulesOnValidation(development.data=development.data,
validation.data=validation.data,
study.design.development="observational",
vec.approaches=vec.approaches,
vec.rule.methods=vec.rule.methods,
vec.propensity.methods=vec.propensity.methods,
name.outcome.development="no_relapse",
type.outcome.development="binary",
name.treatment.development="intervention",
names.influencing.treatment.development=c("prognosis", "clinic", "age"),
names.influencing.rule.development=c("age", paste0("gene_", 1:10)),
desirable.outcome.development=TRUE)
library(DevTreatRules)
CompareRulesOnValidation(
library(DevTreatRules)
head(example_df)
set.seed(123)
example.split <- SplitData(data=example_df, n.sets=3, split.proportions=c(0.5, 0.25, 0.25))
library(DevTreatRules)
head(example_df)
set.seed(123)
example.split <- SplitData(data=example_df, n.sets=3, split.proportions=c(0.5, 0.25, 0.25))
table(example.split$partition)
library(dplyr)
development.data <- example.split %>% filter(partition == "development")
validation.data <-  example.split %>% filter(partition == "validation")
evaluation.data <-  example.split %>% filter(partition == "evaluation")
model.selection <- CompareRulesOnValidation(development.data=development.data,
validation.data=validation.data,
study.design.development="observational",
vec.approaches=vec.approaches,
vec.rule.methods=vec.rule.methods,
vec.propensity.methods=vec.propensity.methods,
name.outcome.development="no_relapse",
type.outcome.development="binary",
name.treatment.development="intervention",
names.influencing.treatment.development=c("prognosis", "clinic", "age"),
names.influencing.rule.development=c("age", paste0("gene_", 1:10)),
desirable.outcome.development=TRUE)
names.influencing.treatment=c("prognosis", "clinic", "age")
vec.approaches=c("split-regression", "OWL.framework", "direct.interactions")
vec.rule.methods=c("glm.regression", "lasso", "ridge")
vec.propensity.methods=c("logistic.regression", "lasso", "ridge")
set.seed(123)
model.selection <- CompareRulesOnValidation(development.data=development.data,
validation.data=validation.data,
study.design.development="observational",
vec.approaches=vec.approaches,
vec.rule.methods=vec.rule.methods,
vec.propensity.methods=vec.propensity.methods,
name.outcome.development="no_relapse",
type.outcome.development="binary",
name.treatment.development="intervention",
names.influencing.treatment.development=c("prognosis", "clinic", "age"),
names.influencing.rule.development=c("age", paste0("gene_", 1:10)),
desirable.outcome.development=TRUE)
vec.approaches=c("split.regression", "OWL.framework", "direct.interactions")
vec.rule.methods=c("glm.regression", "lasso", "ridge")
vec.propensity.methods=c("logistic.regression", "lasso", "ridge")
set.seed(123)
model.selection <- CompareRulesOnValidation(development.data=development.data,
validation.data=validation.data,
study.design.development="observational",
vec.approaches=vec.approaches,
vec.rule.methods=vec.rule.methods,
vec.propensity.methods=vec.propensity.methods,
name.outcome.development="no_relapse",
type.outcome.development="binary",
name.treatment.development="intervention",
names.influencing.treatment.development=c("prognosis", "clinic", "age"),
names.influencing.rule.development=c("age", paste0("gene_", 1:10)),
desirable.outcome.development=TRUE)
```
library(glmnet)
library(DevTreatRules)
library(glmnet)
model.selection$list.summaries[["split.regression"]]
model.selection$list.summaries[["OWL.framework"]]
model.selection$list.summaries[["direct.interactions"]]
model.selection$list.summaries[["OWL.framework"]]
